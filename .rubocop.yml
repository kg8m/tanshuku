inherit_mode:
  merge:
    - Exclude
    - Include

require:
  - rubocop-md
  - rubocop-on-rbs
  - rubocop-performance
  - rubocop-rails
  - rubocop-rake
  - rubocop-rspec
  - rubocop-rspec_rails
  - rubocop-thread_safety
  - rubocop-yard

AllCops:
  TargetRubyVersion: 3.2
  EnabledByDefault: true
  Exclude:
    - "spec/dummy/**/*"

# Gem comments are unnecessary for this project.
Bundler/GemComment:
  Enabled: false
# Version specifications in `Gemfile`s are unnecessary for this project.
Bundler/GemVersion:
  Enabled: false

Layout/ExtraSpacing:
  AllowBeforeTrailingComments: true
Layout/LeadingCommentSpace:
  AllowRBSInlineAnnotation: true
Layout/LineLength:
  AllowedPatterns:
    - "'.{50,}'"
    - '".{50,}"'
    - "\\.and_wrap_original\\b"
    - "^\\s*it\\b.+\\bdo$"
# I want to use single line block chains.
Layout/SingleLineBlockChain:
  Enabled: false

# Forcing full qualifying constants isn’t worth doing.
Lint/ConstantResolution:
  Enabled: false
Lint/NumberConversion:
  Exclude:
    - "db/migrate/20230220123456_create_tanshuku_urls.rb"
Lint/RedundantCopDisableDirective:
  AutoCorrect: false
Lint/UnusedBlockArgument:
  AutoCorrect: false
Lint/UnusedMethodArgument:
  AutoCorrect: false

Metrics/AbcSize:
  Max: 32
Metrics/MethodLength:
  Max: 30

Rails/DynamicFindBy:
  AllowedMethods:
    - find_by_url
Rails/Output:
  Exclude:
    - "lib/tasks/*"
Rails/Present:
  Exclude:
    - "Gemfile"
# Comments are unnecessary.
Rails/SchemaComment:
  Enabled: false

# I want to use "if" and so on for contexts.
RSpec/ContextWording:
  Enabled: false
RSpec/DescribeClass:
  Exclude:
    - "**/spec/config/**/*"
# Forcing using `described_class` isn’t readable.
RSpec/DescribedClass:
  Enabled: false
RSpec/EmptyHook:
  AutoCorrect: false
# Long examples are sometimes rational.
RSpec/ExampleLength:
  Enabled: false
# Expectations in hooks are sometimes rational.
RSpec/ExpectInHook:
  Enabled: false
# Indexed `let` is sometimes rational, e.g., when arbitrary multiple records are needed.
RSpec/IndexedLet:
  Enabled: false
RSpec/MultipleExpectations:
  Max: 10
RSpec/MultipleMemoizedHelpers:
  Max: 15
RSpec/NestedGroups:
  Max: 10

# Some non-ASCII symbols, e.g., “, ’, and so on, can be used.
Style/AsciiComments:
  Enabled: false
# Forcing explicit constant visibility isn’t worth doing.
Style/ConstantVisibility:
  Enabled: false
# Copyright is unnecessary for this project.
Style/Copyright:
  Enabled: false
Style/DisableCopsWithinSourceCodeDirective:
  AutoCorrect: false
  AllowedCops:
    - Lint/DuplicateMethods
    - Lint/NumberConversion
    - Lint/RescueException
    - Rails/ApplicationRecord
    - Rails/RakeEnvironment
    - Rails/TimeZone
    - ThreadSafety/ClassInstanceVariable
    - ThreadSafety/NewThread
Style/Documentation:
  Exclude:
    - "db/migrate/*"
    - "lib/tasks/*"
    - "tools/*"
Style/DocumentationMethod:
  Exclude:
    - "db/migrate/*"
    - "lib/tasks/*"
    - "tools/*"
Style/FrozenStringLiteralComment:
  Exclude:
    # Temporary workaround (cf. https://github.com/ksss/rubocop-on-rbs/pull/76)
    - "**/*.rbs"

    - "bin/*"
# Use inline comments like `array = [] #: Array[String]` for RBS/Steep.
Style/InlineComment:
  Enabled: false
# Forcing parentheses of all method calls isn’t readable.
# e.g., redirect_to, raise, create_table, t.string, RSpec’s expectations, assertions, and so on
Style/MethodCallWithArgsParentheses:
  Enabled: false
# Forcing `else` isn’t worth doing.
Style/MissingElse:
  Enabled: false
Style/RedundantBegin:
  AutoCorrect: false

# Use double quotes for consistency with Rails.
Style/StringLiterals:
  EnforcedStyle: double_quotes
Style/StringLiteralsInInterpolation:
  EnforcedStyle: double_quotes

Style/TrailingCommaInArrayLiteral:
  EnforcedStyleForMultiline: consistent_comma
Style/TrailingCommaInHashLiteral:
  EnforcedStyleForMultiline: consistent_comma

ThreadSafety/DirChdir:
  Exclude:
    - "tanshuku.gemspec"
