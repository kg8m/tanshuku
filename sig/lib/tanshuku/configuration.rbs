module Tanshuku
  class Configuration
    interface _UrlHasher
      def call: (String url, namespace: String) -> String
    end

    interface _KeyGenerator
      def call: -> String
    end

    interface _ExceptionReporter
      def call: (exception: Exception, original_url: String) -> void
    end

    extend ActiveModel::Attributes::ClassMethods

    @mutex: Thread::Mutex

    attr_accessor default_url_options (): Hash[String | Symbol, untyped]
    attr_accessor max_url_length (): Integer
    attr_accessor url_pattern (): Regexp
    attr_accessor key_length (): Integer
    attr_accessor url_hasher (): _UrlHasher
    attr_accessor key_generator (): _KeyGenerator
    attr_accessor exception_reporter (): _ExceptionReporter

    def initialize: (*bot noname) -> void
    def configure: { (Configuration) -> void } -> void

    module DefaultUrlHasher
      extend _UrlHasher
    end

    module DefaultKeyGenerator
      extend _KeyGenerator
    end

    module DefaultExceptionReporter
      extend _ExceptionReporter
    end
  end
end
