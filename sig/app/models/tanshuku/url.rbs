# cf. https://github.com/pocke/rbs_rails
module Tanshuku
  class Url < ActiveRecord::Base
    class ActiveRecord_Relation < ActiveRecord::Relation
      include _ActiveRecord_Relation[Tanshuku::Url, Integer]
      include Enumerable[Tanshuku::Url]
    end

    extend _ActiveRecord_Relation_ClassMethods[Tanshuku::Url, ActiveRecord_Relation, Integer]

    DEFAULT_NAMESPACE: String

    module GeneratedAttributeMethods
      attr_accessor id (): Integer?
      def id?: () -> bool
      def id_changed?: () -> bool
      def id_change: () -> [Integer?, Integer?]
      def id_will_change!: () -> void
      def id_was: () -> Integer?
      def id_previously_changed?: () -> bool
      def id_previous_change: () -> [Integer?, Integer?]?
      def id_previously_was: () -> Integer?
      def id_before_last_save: () -> Integer?
      def id_change_to_be_saved: () -> [Integer?, Integer?]?
      def id_in_database: () -> Integer?
      def saved_change_to_id: () -> [Integer?, Integer?]?
      def saved_change_to_id?: () -> bool
      def will_save_change_to_id?: () -> bool
      def restore_id!: () -> void
      def clear_id_change: () -> void

      attr_accessor url (): String?
      def url?: () -> bool
      def url_changed?: () -> bool
      def url_change: () -> [String?, String?]
      def url_will_change!: () -> void
      def url_was: () -> String?
      def url_previously_changed?: () -> bool
      def url_previous_change: () -> [String?, String?]?
      def url_previously_was: () -> String?
      def url_before_last_save: () -> String?
      def url_change_to_be_saved: () -> [String?, String?]?
      def url_in_database: () -> String?
      def saved_change_to_url: () -> [String?, String?]?
      def saved_change_to_url?: () -> bool
      def will_save_change_to_url?: () -> bool
      def restore_url!: () -> void
      def clear_url_change: () -> void

      attr_accessor hashed_url (): String?
      def hashed_url?: () -> bool
      def hashed_url_changed?: () -> bool
      def hashed_url_change: () -> [String?, String?]
      def hashed_url_will_change!: () -> void
      def hashed_url_was: () -> String?
      def hashed_url_previously_changed?: () -> bool
      def hashed_url_previous_change: () -> [String?, String?]?
      def hashed_url_previously_was: () -> String?
      def hashed_url_before_last_save: () -> String?
      def hashed_url_change_to_be_saved: () -> [String?, String?]?
      def hashed_url_in_database: () -> String?
      def saved_change_to_hashed_url: () -> [String?, String?]?
      def saved_change_to_hashed_url?: () -> bool
      def will_save_change_to_hashed_url?: () -> bool
      def restore_hashed_url!: () -> void
      def clear_hashed_url_change: () -> void

      attr_accessor key (): String?
      def key?: () -> bool
      def key_changed?: () -> bool
      def key_change: () -> [String?, String?]
      def key_will_change!: () -> void
      def key_was: () -> String?
      def key_previously_changed?: () -> bool
      def key_previous_change: () -> [String?, String?]?
      def key_previously_was: () -> String?
      def key_before_last_save: () -> String?
      def key_change_to_be_saved: () -> [String?, String?]?
      def key_in_database: () -> String?
      def saved_change_to_key: () -> [String?, String?]?
      def saved_change_to_key?: () -> bool
      def will_save_change_to_key?: () -> bool
      def restore_key!: () -> void
      def clear_key_change: () -> void

      attr_accessor created_at (): ActiveSupport::TimeWithZone?
      def created_at?: () -> bool
      def created_at_changed?: () -> bool
      def created_at_change: () -> [ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone?]
      def created_at_will_change!: () -> void
      def created_at_was: () -> ActiveSupport::TimeWithZone?
      def created_at_previously_changed?: () -> bool
      def created_at_previous_change: () -> [ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone?]?
      def created_at_previously_was: () -> ActiveSupport::TimeWithZone?
      def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?
      def created_at_change_to_be_saved: () -> [ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone?]?
      def created_at_in_database: () -> ActiveSupport::TimeWithZone?
      def saved_change_to_created_at: () -> [ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone?]?
      def saved_change_to_created_at?: () -> bool
      def will_save_change_to_created_at?: () -> bool
      def restore_created_at!: () -> void
      def clear_created_at_change: () -> void
    end
    include GeneratedAttributeMethods

    def self.shorten: (String original_url, ?namespace: String, ?url_options: Hash[String | Symbol, untyped]) -> String
    def self.find_by_url: (String url, ?namespace: String) -> Tanshuku::Url?
    def self.normalize_url: (String url) -> String
    def self.hash_url: (String url, ?namespace: String) -> String
    def self.generate_key: -> String
    def self.report_exception: (exception: Exception, original_url: String) -> void
    def shortened_url: (?Hash[String | Symbol, untyped] url_options) -> String
  end
end
